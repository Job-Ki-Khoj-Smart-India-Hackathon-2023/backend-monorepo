# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import common_pb2 as common__pb2
import jkk_job_pb2 as jkk__job__pb2
import pgrkam_private_job_pb2 as pgrkam__private__job__pb2


class JobServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreatePGRKAMPrivateJob = channel.unary_unary(
                '/JobService/CreatePGRKAMPrivateJob',
                request_serializer=pgrkam__private__job__pb2.PGRKAMPrivateJob.SerializeToString,
                response_deserializer=common__pb2.Response.FromString,
                )
        self.GetPGRKAMPrivateJobs = channel.unary_unary(
                '/JobService/GetPGRKAMPrivateJobs',
                request_serializer=common__pb2.Empty.SerializeToString,
                response_deserializer=pgrkam__private__job__pb2.PGRKAMPrivateJobList.FromString,
                )
        self.UpdatePGRKAMPrivateJob = channel.unary_unary(
                '/JobService/UpdatePGRKAMPrivateJob',
                request_serializer=pgrkam__private__job__pb2.PGRKAMPrivateJob.SerializeToString,
                response_deserializer=common__pb2.Response.FromString,
                )
        self.DeletePGRKAMPrivateJob = channel.unary_unary(
                '/JobService/DeletePGRKAMPrivateJob',
                request_serializer=common__pb2.Id.SerializeToString,
                response_deserializer=common__pb2.Response.FromString,
                )
        self.CreateJKKJob = channel.unary_unary(
                '/JobService/CreateJKKJob',
                request_serializer=jkk__job__pb2.JKKJob.SerializeToString,
                response_deserializer=common__pb2.Response.FromString,
                )
        self.GetJKKJobs = channel.unary_unary(
                '/JobService/GetJKKJobs',
                request_serializer=common__pb2.Empty.SerializeToString,
                response_deserializer=jkk__job__pb2.JKKJobList.FromString,
                )
        self.UpdateJKKJob = channel.unary_unary(
                '/JobService/UpdateJKKJob',
                request_serializer=jkk__job__pb2.JKKJob.SerializeToString,
                response_deserializer=common__pb2.Response.FromString,
                )
        self.DeleteJKKJob = channel.unary_unary(
                '/JobService/DeleteJKKJob',
                request_serializer=common__pb2.Id.SerializeToString,
                response_deserializer=common__pb2.Response.FromString,
                )


class JobServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CreatePGRKAMPrivateJob(self, request, context):
        """PGRKAM Private Job rpc's
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPGRKAMPrivateJobs(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdatePGRKAMPrivateJob(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeletePGRKAMPrivateJob(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateJKKJob(self, request, context):
        """JKK Private Job rpc's
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetJKKJobs(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateJKKJob(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteJKKJob(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_JobServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreatePGRKAMPrivateJob': grpc.unary_unary_rpc_method_handler(
                    servicer.CreatePGRKAMPrivateJob,
                    request_deserializer=pgrkam__private__job__pb2.PGRKAMPrivateJob.FromString,
                    response_serializer=common__pb2.Response.SerializeToString,
            ),
            'GetPGRKAMPrivateJobs': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPGRKAMPrivateJobs,
                    request_deserializer=common__pb2.Empty.FromString,
                    response_serializer=pgrkam__private__job__pb2.PGRKAMPrivateJobList.SerializeToString,
            ),
            'UpdatePGRKAMPrivateJob': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdatePGRKAMPrivateJob,
                    request_deserializer=pgrkam__private__job__pb2.PGRKAMPrivateJob.FromString,
                    response_serializer=common__pb2.Response.SerializeToString,
            ),
            'DeletePGRKAMPrivateJob': grpc.unary_unary_rpc_method_handler(
                    servicer.DeletePGRKAMPrivateJob,
                    request_deserializer=common__pb2.Id.FromString,
                    response_serializer=common__pb2.Response.SerializeToString,
            ),
            'CreateJKKJob': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateJKKJob,
                    request_deserializer=jkk__job__pb2.JKKJob.FromString,
                    response_serializer=common__pb2.Response.SerializeToString,
            ),
            'GetJKKJobs': grpc.unary_unary_rpc_method_handler(
                    servicer.GetJKKJobs,
                    request_deserializer=common__pb2.Empty.FromString,
                    response_serializer=jkk__job__pb2.JKKJobList.SerializeToString,
            ),
            'UpdateJKKJob': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateJKKJob,
                    request_deserializer=jkk__job__pb2.JKKJob.FromString,
                    response_serializer=common__pb2.Response.SerializeToString,
            ),
            'DeleteJKKJob': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteJKKJob,
                    request_deserializer=common__pb2.Id.FromString,
                    response_serializer=common__pb2.Response.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'JobService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class JobService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CreatePGRKAMPrivateJob(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/JobService/CreatePGRKAMPrivateJob',
            pgrkam__private__job__pb2.PGRKAMPrivateJob.SerializeToString,
            common__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetPGRKAMPrivateJobs(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/JobService/GetPGRKAMPrivateJobs',
            common__pb2.Empty.SerializeToString,
            pgrkam__private__job__pb2.PGRKAMPrivateJobList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdatePGRKAMPrivateJob(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/JobService/UpdatePGRKAMPrivateJob',
            pgrkam__private__job__pb2.PGRKAMPrivateJob.SerializeToString,
            common__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeletePGRKAMPrivateJob(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/JobService/DeletePGRKAMPrivateJob',
            common__pb2.Id.SerializeToString,
            common__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateJKKJob(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/JobService/CreateJKKJob',
            jkk__job__pb2.JKKJob.SerializeToString,
            common__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetJKKJobs(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/JobService/GetJKKJobs',
            common__pb2.Empty.SerializeToString,
            jkk__job__pb2.JKKJobList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateJKKJob(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/JobService/UpdateJKKJob',
            jkk__job__pb2.JKKJob.SerializeToString,
            common__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteJKKJob(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/JobService/DeleteJKKJob',
            common__pb2.Id.SerializeToString,
            common__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
